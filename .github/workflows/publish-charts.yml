---
# Copyright (c) 2025 Nurol, Inc. (nurol.ai)
# This file is licensed under the Creative Commons Attribution-NonCommercial 4.0
# International License (CC BY-NC 4.0).
# For commercial use, please contact info@nurol.ai

name: Publish Helm Charts

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - 'charts/**'
  pull_request:
    branches:
      - main
    paths:
      - 'charts/**'
  release:
    types: [published]

jobs:
  lint-and-test:
    runs-on: self-hosted
    env:
      HELM_HOME: /tmp/helm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Helm
        run: |
          if ! command -v helm &> /dev/null; then
            echo "Helm not found, installing..."
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          else
            echo "Helm version: $(helm version --short)"
          fi

      - name: Lint Charts
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Current directory: $(pwd)"
          echo "Available charts:"
          ls -la charts/

          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Linting $chart"
              helm lint "$chart"
            fi
          done

      - name: Test Charts
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Testing $chart"
              helm template test "$chart" > /dev/null
            fi
          done

  publish:
    needs: lint-and-test
    runs-on: self-hosted
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    env:
      HELM_HOME: /tmp/helm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Workflow Trigger
        run: |
          echo "Workflow triggered by:"
          echo "  Event: ${{ github.event_name }}"
          echo "  Ref: ${{ github.ref }}"
          echo "  SHA: ${{ github.sha }}"
          echo "  Actor: ${{ github.actor }}"
          echo "  Repository: ${{ github.repository }}"

      - name: Setup Helm
        run: |
          if ! command -v helm &> /dev/null; then
            echo "Helm not found, installing..."
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          else
            echo "Helm version: $(helm version --short)"
          fi

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email \
            "github-actions[bot]@users.noreply.github.com"

      - name: Checkout Pages Repository
        uses: actions/checkout@v4
        with:
          repository: Nurol-AI/nurol-ai.github.io
          path: pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Package Charts
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Current directory: $(pwd)"
          echo "Available charts:"
          ls -la charts/
          echo "Chart.yaml files:"
          find charts/ -name "Chart.yaml" -type f

          # Extract version from git tag or use default
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "Using version from tag: $VERSION"
          else
            VERSION="0.1.0"
            echo "Using default version: $VERSION"
          fi

          mkdir -p pages/charts

          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Packaging $chart with version $VERSION"
              # Temporarily update Chart.yaml version
              sed -i "s/^version: .*/version: $VERSION/" \
                "$chart/Chart.yaml"
              helm package "$chart" --destination pages/charts
              # Restore original version
              git checkout HEAD -- \
                "$chart/Chart.yaml"
            else
              echo "No Chart.yaml found in $chart"
            fi
          done

          echo "Packaged charts:"
          ls -la pages/charts/
          echo "Chart package details:"
          for pkg in pages/charts/*.tgz; do
            if [ -f "$pkg" ]; then
              echo "Package: $pkg"
              ls -la "$pkg"
            fi
          done

      - name: Update Index
        run: |
          echo "Current directory: $(pwd)"
          echo "Checking for existing index.yaml:"
          ls -la pages/charts/ || echo "charts directory not found"
          
          if [ -f "pages/charts/index.yaml" ]; then
            echo "Merging with existing index.yaml"
            helm repo index pages/charts \
              --url https://nurol-ai.github.io/charts \
              --merge pages/charts/index.yaml
          else
            echo "Creating new index.yaml"
            helm repo index pages/charts --url https://nurol-ai.github.io/charts
          fi
          
          echo "Generated index.yaml:"
          ls -la pages/charts/index.yaml || echo "index.yaml not found"

      - name: Create Repository README
        run: |
          chmod +x .github/workflows/generate-readme.sh
          .github/workflows/generate-readme.sh

      - name: Commit and Push to Pages Repository
        run: |
          cd pages
          
          echo "Current directory: $(pwd)"
          echo "Repository status:"
          git status
          echo "Files in pages directory:"
          ls -la
          echo "Files in charts directory:"
          ls -la charts/ || echo "charts directory not found"
          echo "Git diff:"
          git diff || echo "No diff"
          echo "Git diff --cached:"
          git diff --cached || echo "No staged changes"

          # Add all changes (including untracked files)
          git add .

          # Commit with descriptive message
          git commit -m "Update Helm charts from helm-charts repository

          - Updated chart packages
          - Updated repository index
          - Updated documentation

          Triggered by: ${{ github.event.head_commit.message }}"

          # Push to main branch
          git push origin main

      - name: Verify Deployment
        run: |
          echo "Helm charts have been successfully published to GitHub Pages"
          echo "Repository: https://github.com/Nurol-AI/nurol-ai.github.io"
          echo "Charts available at: https://nurol-ai.github.io/charts/"
          echo "Index file: https://nurol-ai.github.io/charts/index.yaml"
